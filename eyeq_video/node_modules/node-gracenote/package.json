{
  "name": "node-gracenote",
  "version": "0.0.1",
  "description": "A node.js wrapper for the Gracenote API - https://developer.gracenote.com",
  "keywords": [
    "gracenote"
  ],
  "author": {
    "name": "Dominik Danninger",
    "email": "ddanninger@gmail.com"
  },
  "main": "./lib/Gracenote",
  "dependencies": {
    "memory-cache": "0.0.5",
    "request": "^2.36.0",
    "xml2js": "^0.4.4"
  },
  "engines": {
    "node": "*"
  },
  "directories": {
    "lib": "lib"
  },
  "devDependencies": {},
  "repository": {
    "type": "git",
    "url": "git://github.com/ddanninger/node-gracenote.git"
  },
  "readme": "node-gracenote\n==============\n\nA node.js wrapper for the Gracenote API - https://developer.gracenote.com\n\n## Installation\n\n```\nnpm install ddanninger/node-gracenote\n```\n\n## Gracenote Options\n\nRequest defaults can be sent as an extra parameter to the constructor.\nMore information can be found at [the Request Github page](https://github.com/mikeal/request#requestdefaultsoptions).\n\n```\nvar api = new Gracenote(clientId,clientTag,userId,requestDefaults);\n```\n\n## Register\n\nFunction - `api.register(req callback)`\n\n```\nvar Gracenote = require(\"node-gracenote\");\nvar clientId = \"XXX\";\nvar clientTag = \"YYY\";\nvar userId = null;\nvar api = new Gracenote(clientId,clientTag,userId);\napi.register(function(err, uid) {\n\t// store this somewhere for the next session\n})`;\n```\n\n## Search For Track\n\nFunction - `api.searchTrack(req artistName, req albumTitle, req trackTitle, req callback, opt matchMode)`\n\n```\nvar Gracenote = require(\"node-gracenote\");\nvar clientId = \"XXX\";\nvar clientTag = \"YYY\";\nvar userId = \"ZZZ\";\nvar api = new Gracenote(clientId,clientTag,userId);\napi.searchTrack(\"Kings of Leon\", \"Only by the Night\", \"Sex on fire\", function(err, result) {\n\t// Search Result as array\n});\n```\n\n## Search for Artist\n\nFunction - `api.searchArtist(req artistName, req callback, opt matchMode)`\n\n```\nvar Gracenote = require(\"node-gracenote\");\nvar clientId = \"XXX\";\nvar clientTag = \"YYY\";\nvar userId = \"ZZZ\";\nvar api = new Gracenote(clientId,clientTag,userId);\napi.searchArtist(\"Kings of Leon\", function(result) {\n\t// Search Result as array\n});\n```\n\n## Search for Album\n\nFunction - `api.searchAlbum(req artistName, req albumTitle, req callback, opt matchMode)`\n\n```\nvar Gracenote = require(\"node-gracenote\");\nvar clientId = \"XXX\";\nvar clientTag = \"YYY\";\nvar userId = \"ZZZ\";\nvar api = new Gracenote(clientId,clientTag,userId);\napi.searchAlbum(\"Kings of Leon\", \"Only by the Night\", function(err, result) {\n\t// Search Result as array\n});\n```\n\n## Config options\n\n`matchMode`- can be either `Gracenote.BEST_MATCH_ONLY`or `Gracenote.ALL_RESULTS`(default)\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/ddanninger/node-gracenote/issues"
  },
  "homepage": "https://github.com/ddanninger/node-gracenote",
  "_id": "node-gracenote@0.0.1",
  "_shasum": "9fbfa258998d6d7a2c9ced92657345675a30a6e1",
  "_resolved": "git://github.com/ddanninger/node-gracenote#6ab08d28002013f3375d4f259e36a5acca9406f8",
  "_from": "git://github.com/ddanninger/node-gracenote",
  "_fromGithub": true
}
